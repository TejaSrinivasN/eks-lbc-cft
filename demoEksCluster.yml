AWSTemplateFormatVersion: 2010-09-09
Parameters:
  ClusterName:
    Type: String
    Description: Name of the EKS cluster
  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: ID of the Amazon VPC for the cluster
  SubnetIds:
    Type: List<AWS::EC2::Subnet::Id>
    Description: List of subnet IDs in the VPC
  KeyName:
    Type: AWS::EC2::KeyPair::KeyName
    Description: EC2 key pair to associate with the worker nodes
  NodeGroupName:
    Type: String
    Description: Name of the EKS node group
  NodeInstanceType:
    Type: String
    Description: EC2 instance type for the worker nodes
    Default: t3.medium
  DesiredCapacity:
    Type: Number
    Description: Desired number of worker nodes
    Default: 2
    MinValue: 1
    MaxValue: 10
  OidcThumbprint:
    Description: Thumbprint ID for EKS OIDC
    Type: String
    Default: 9e99a48a9960b14926bb7f3b02e22da2b0ab7280

Resources:
#Eks Cluster
  EksClusterControlPlane:
    Type: AWS::EKS::Cluster
    Properties:
      Name: !Ref ClusterName
      RoleArn: !GetAtt EKSClusterRole.Arn
      ResourcesVpcConfig:
        SecurityGroupIds:
          - !Ref ClusterSecurityGroup
        SubnetIds: !Ref SubnetIds
#cluster security groups
  ClusterSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for the EKS cluster
      VpcId: !Ref VpcId
#IamRoles
  EKSClusterRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${ClusterName}-role
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: eks.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonEKSClusterPolicy
        - arn:aws:iam::aws:policy/AmazonEKSVPCResourceController
  NodeInstanceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${ClusterName}-node-instance-role
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy
        - arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy
        - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly

  VpcCniRole:
    Type: 'AWS::IAM::Role'
    DependsOn: EksOIDCProvider
    Properties:
      RoleName: !Join
      - ''
      - - eks-
        - !Ref ClusterName
        - '-vpccni'
      AssumeRolePolicyDocument: !Sub
      - |
        {
          "Version": "2012-10-17",
          "Statement": [
              {
                  "Effect": "Allow",
                  "Principal": {
                      "Federated": "arn:aws:iam::${AWS::AccountId}:oidc-provider/${OidcProviderEndpoint}"
                  },
                  "Action": "sts:AssumeRoleWithWebIdentity",
                  "Condition": {
                      "StringEquals": {
                          "${OidcProviderEndpoint}:sub": "system:serviceaccount:kube-system:aws-node"
        , "${OidcProviderEndpoint}:aud": "sts.amazonaws.com"
                      }
                  }
              }
          ]
        }
      - OidcProviderEndpoint: !Select
        - 1
        - !Split
          - //
          - !GetAtt
            - EksClusterControlPlane
            - OpenIdConnectIssuerUrl
      ManagedPolicyArns:
      - 'arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy'

#OIDC
  EksOIDCProvider:
    Type: 'AWS::IAM::OIDCProvider'
    DependsOn: EksClusterControlPlane
    Properties:
      ClientIdList:
      - sts.amazonaws.com
      ThumbprintList:
      - !Ref OidcThumbprint
      Url: !GetAtt
      - EksClusterControlPlane
      - OpenIdConnectIssuerUrl
#nodeGroup
  NodeGroup:
    Type: AWS::EKS::Nodegroup
    DependsOn: EksClusterControlPlane
    Properties:
      ClusterName: !Ref ClusterName
      NodegroupName: !Ref NodeGroupName
      NodeRole: !GetAtt NodeInstanceRole.Arn
      Subnets: !Ref SubnetIds
      ScalingConfig:
        DesiredSize: !Ref DesiredCapacity
        MinSize: 1
        MaxSize: 1
      InstanceTypes:
        - !Ref NodeInstanceType
#Add-ons
  CorednsAddon:
    Type: 'AWS::EKS::Addon'
    DeletionPolicy: Retain
    DependsOn: EksClusterControlPlane
    Properties:
      AddonName: coredns
      ClusterName: !Ref ClusterName
      ResolveConflicts: OVERWRITE
  VpcCniAddon:
    Type: 'AWS::EKS::Addon'
    DeletionPolicy: Retain
    DependsOn: VpcCniRole
    Properties:
      AddonName: vpc-cni
      #ConfigurationValues: '{"env":{"ENABLE_PREFIX_DELEGATION":"true"}}'
      ClusterName: !Ref ClusterName
      ResolveConflicts: OVERWRITE
      ServiceAccountRoleArn: !GetAtt
      - VpcCniRole
      - Arn
  KubeProxyAddon:
    Type: 'AWS::EKS::Addon'
    DeletionPolicy: Retain
    DependsOn: EksClusterControlPlane
    Properties:
      AddonName: kube-proxy
      ClusterName: !Ref ClusterName
      ResolveConflicts: OVERWRITE
#Security groups
  NodeGroupSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription:
        Fn::Sub: ${AWS::StackName}-ClusterNodeGroupSG
      GroupName:
        Fn::Sub: ${AWS::StackName}-ClusterNodeGroupSG
      VpcId: !Ref VpcId
      Tags:
      - Key: Name
        Value:
          Fn::Sub: ${AWS::StackName}/NodeGroupSG

  NodeGroupSecurityGroupIngress:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      GroupId: !Ref NodeGroupSecurityGroup
      IpProtocol: '-1'
      Description: Allow within Node group SG
      SourceSecurityGroupId: !Ref NodeGroupSecurityGroup

Outputs:
  ClusterNameOutput:
    Description: Name of the EKS cluster
    Value: !Ref ClusterName
  NodeGroupNameOutput:
    Description: Name of the EKS node group
    Value: !Ref NodeGroupName
  OpenIdConnectIssuerUrl:
    Description: Gravity Cluster OpenIdConnectIssuerUrl
    Value: !GetAtt
    - EksClusterControlPlane
    - OpenIdConnectIssuerUrl